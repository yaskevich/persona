/* eslint-disable no-cond-assign */
/* eslint-disable no-await-in-loop */
import fs from 'fs';
import path from 'path';
// import nlp from './nlp.js';

let dirent;

const dir = fs.opendirSync('../texts/');

while ((dirent = dir.readSync()) !== null) {
  if (dirent.name.includes('.html')) {
    const fpath = path.join(dirent.parentPath, dirent.name);
    const content = fs.readFileSync(fpath, 'utf8');
    const iss = (content.replace(/<[^>]*>?/gm, ' ').match(/i/ig) || []).length;
    if (iss > 100) {
    //   console.log(dirent.name);
    //   console.log(iss);

      const newContent = content.replaceAll('div', 'ðŸ˜œ')
        .replaceAll('id', 'ðŸ¤ª')
        .replaceAll('i', 'Ñ–')
        .replaceAll('I', 'Ð†')
        .replaceAll('ðŸ˜œ', 'div')
        .replaceAll('ðŸ¤ª', 'id')
        .replaceAll('<p>Ð†</p>', '<p>Ð†</p>')
        .replaceAll('<p>Ð†Ð†</p>', '<p>Ð†I</p>')
        .replaceAll('<p>Ð†Ð†Ð†</p>', '<p>Ð†II</p>')
        .replaceAll('<p>Ð†V</p>', '<p>Ð†V</p>')
        .replaceAll('<p>VÐ†</p>', '<p>VÐ†</p>')
        .replaceAll('<p>VÐ†Ð†</p>', '<p>VÐ†Ð†</p>')
        .replaceAll('<p>VÐ†Ð†Ð†</p>', '<p>VÐ†Ð†I</p>')
        .replaceAll('<p>Ð†X</p>', '<p>Ð†X</p>')
        .replaceAll('<h3>Ð†</h3>', '<h3>Ð†</h3>')
        .replaceAll('<h3>Ð†Ð†</h3>', '<h3>Ð†I</h3>')
        .replaceAll('<h3>Ð†Ð†Ð†</h3>', '<h3>Ð†II</h3>')
        .replaceAll('<h3>Ð†V</h3>', '<h3>Ð†V</h3>')
        .replaceAll('<h3>VÐ†</h3>', '<h3>VÐ†</h3>')
        .replaceAll('<h3>VÐ†Ð†</h3>', '<h3>VÐ†Ð†</h3>')
        .replaceAll('<h3>VÐ†Ð†Ð†</h3>', '<h3>VÐ†Ð†I</h3>')
        .replaceAll('<h3>Ð†X</h3>', '<h3>Ð†X</h3>');
      fs.writeFileSync(fpath, newContent);
    } else if (iss > 10) {
      console.log(iss, fpath);
    }
  }
}

dir.closeSync();

// console.log(works);
process.exit();
